
services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: pharmvar_db
    environment:
      POSTGRES_DB: pharmvar_db
      POSTGRES_USER: pharmvar_user
      POSTGRES_PASSWORD: pharmvar_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pharmvar_user -d pharmvar_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pharmvar_network

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: pharmvar_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pharmvar_network

  # FastAPI Application
  api:
    build: .
    container_name: pharmvar_api
    environment:
      - DATABASE_URL=postgresql://pharmvar_user:pharmvar_pass@db:5432/pharmvar_db
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=False
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    networks:
      - pharmvar_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: pharmvar_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - pharmvar_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  pharmvar_network:
    driver: bridge